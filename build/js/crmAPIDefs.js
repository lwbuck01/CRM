/*
 * Original can be found at https://github.com/SanderRonde/CustomRightClickMenu 
 * This code may only be used under the MIT style license found in the LICENSE.txt file 
**/
window.crmAPIDefs={"!name":"crmAPI",crmAPI:{stackTraces:{"!type":"bool","!doc":"When true, shows stacktraces on error in the console of the page the script runs on, true by default.","!url":"/html/crmAPIDocs.html#stacktraces"},errors:{"!type":"bool","!doc":"If true, throws an error when one of your crmAPI calls is incorrect (such as a type mismatch or any other fail). True by default.","!url":"/html/crmAPIDocs.html#errors"},debugOnerror:{"!type":"bool","!doc":'If true, when an error occurs anywhere in the script, opens the chrome debugger by calling the debugger command. This does not preserve the stack or values. If you want that, use the "catchErrors" option on the options page.',"!url":"/html/crmAPIDocs.html#debugonerror"},onError:{"!type":"Function","!doc":"If set, calls this function when an error occurs","!url":"/html/crmAPIDocs.html#onerror"},warnOnChromeFunctionNotSent:{"!type":"bool","!doc":"When true, warns you after 5 seconds of not sending a chrome function that you probably forgot to send it","!url":"/html/crmAPIDocs.html#warnonchromefunctionnotsent"},options:{"!type":"fn(defaults?: ?) -> ?","!url":"/html/crmAPIDocs.html#options","!doc":"Returns the options for this script/stylesheet. Any missing values are filled in with the corresponding field in the 'defaults' param"},comm:{"!doc":"The communications API used to communicate with other scripts and other instances","!url":"/html/crmAPIDocs.html#comm",getInstances:{"!type":"fn(callback: function)","!url":"/html/crmAPIDocs.html#comm-getinstances","!doc":"Returns all instances running in other tabs, these instances can be passed to the .comm.sendMessage function to send a message to them, you can also call instance.sendMessage on them"},sendMessage:{"!type":"fn(instance: instance, tabIndex: number, message: ?, callback?: function)","!url":"/html/crmAPIDocs.html#comm-sendmessage","!doc":"Sends a message to given instance"},addListener:{"!type":"fn(listener: function) -> number","!url":"/html/crmAPIDocs.html#comm-addlistener","!doc":"Adds a listener for any comm-messages sent from other instances of this script"},removeListener:{"!type":"fn(listener: listener|number)","!url":"/html/crmAPIDocs.html#comm-removelistener","!doc":"Removes a listener currently added by using comm.addListener"},messageBackgroundPage:{"!type":"fn(message: any, response: Function)","!url":"/html/crmAPIDocs.html#comm-messagebackgroundpage","!doc":"Sends a message to the background page for this script"},listenAsBackgroundPage:{"!type":"fn(callback: Function)","!url":"/html/crmAPIDocs.html#comm-listenasbackgroundpage","!doc":"Listens for any messages to the background page"}},storage:{"!doc":"The storage API used to store and retrieve data for this script","!url":"/html/crmAPIDocs.html#storage",get:{"!type":"fn(keyPath?: string|array) -> any","!url":"/html/crmAPIDocs.html#storage-get","!doc":"Gets the value at given key, if no key is given returns the entire storage object"},set:{"!type":"fn(keyPath: string|array|?, value?: any)","!url":"/html/crmAPIDocs.html#storage-set","!doc":"Sets the data at given key to given value"},remove:{"!type":"fn(keyPath: string|array)","!url":"/html/crmAPIDocs.html#storage-remove","!doc":"Deletes the data at given key given value"},onChange:{"!doc":"Functions related to the onChange event of the storage API","!url":"/html/crmAPIDocs.html#storage-onchange",addListener:{"!type":"fn(listener: function, key?: string) -> number","!url":"/html/crmAPIDocs.html#storage-onchange-addlistener","!doc":"Adds an onchange listener for the storage, listens for a key if given"},removeListener:{"!type":"fn(listener: function|number, key?: string)","!url":"/html/crmAPIDocs.html#storage-onchange-removelistener","!doc":"Removes ALL listeners with given listener (function) as the listener, if key is given also checks that they have that key"}}},general:{},getSelection:{"!type":"fn() -> string","!url":"/html/crmAPIDocs.html#getselection","!doc":"Gets the current text selection"},getClickInfo:{"!type":"fn() -> ?","!url":"/html/crmAPIDocs.html#getclickinfo","!doc":"Returns any data about the click on the page, check (https://developer.chrome.com/extensions/contextMenus#method-create) for more info of what can be returned."},getTabInfo:{"!type":"fn() -> ?","!url":"/html/crmAPIDocs.html#gettabinfo","!doc":"Gets any info about the current tab/window"},getNode:{"!type":"fn() -> ?","!url":"/html/crmAPIDocs.html#getnode","!doc":"Gets the current node"},crm:{"!doc":"The crm API, used to make changes to the crm, some API calls may require permissions crmGet and crmWrite","!url":"/html/crmAPIDocs.html#crm",getTree:{"!type":"fn(callback: function)","!url":"/html/crmAPIDocs.html#crm-gettree","!doc":"Gets the CRM tree from the tree's root"},getSubTree:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-getsubtree","!doc":"Gets the CRM's tree from either the root or from the node with ID nodeId"},getNode:{"!type":"fn(callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-getnode","!doc":"Gets the node with ID nodeId"},getNodeIdFromPath:{"!type":"fn(path: [number], callback: function)","!url":"/html/crmAPIDocs.html#crm-getnodeidfrompath","!doc":"Gets a node's ID from a path to the node"},queryCrm:{"!type":"fn(callback: crmCallback, query: ?, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-querycrm","!doc":"Queries the CRM for any items matching your query"},getParentNode:{"!type":"fn(nodeId: number, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-getparentnode","!doc":"Gets the parent of the node with ID nodeId"},getNodeType:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-getnodetype","!doc":"Gets the type of node with ID nodeId"},getNodeValue:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-getnodevalue","!doc":"Gets the value of node with ID nodeId"},createNode:{"!type":"fn(options: ?, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-createnode","!doc":"Creates a node with the given options"},copyNode:{"!type":"fn(nodeId: number, options: ?, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-copynode","!doc":"Copies given node, WARNNG: following properties are not copied: file, storage, id, permissions, nodeInfo Full permissions rights only if both the to be cloned and the script executing this have full rights"},moveNode:{"!type":"fn(nodeId: number, position?: ?, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-movenode","!doc":'Moves given node to position specified in "position"'},deleteNode:{"!type":"fn(nodeId: number, callback?: function)","!url":"/html/crmAPIDocs.html#crm-deletenode","!doc":"Deletes given node"},editNode:{"!type":"fn(nodeId: number, options: ?, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-editnode","!doc":"Edits given settings of the node"},getTriggers:{"!type":"fn(nodeId: number, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-gettriggers","!doc":"Gets the triggers for given node"},setTriggers:{"!type":"fn(nodeId: number, triggers: [?], callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-settriggers","!doc":"Sets the triggers for given node"},getTriggerUsage:{"!type":"fn(nodeId: number, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-gettriggerusage","!doc":"Gets the trigger' usage for given node (true - it's being used, or false), only works on link, menu and divider"},setTriggerUsage:{"!type":"fn(nodeId: number, useTriggers: bool, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-settriggerusage","!doc":"Sets the usage of triggers for given node, only works on link, menu and divider"},getContentTypes:{"!type":"fn(nodeId: number, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-getcontenttypes","!doc":"Gets the content types for given node"},setContentType:{"!type":"fn(nodeId: number, index: number, value: bool, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-setcontenttype","!doc":'Sets the content type at index "index" to given value "value"'},setContentTypes:{"!type":"fn(nodeId: number, contentTypes: [string], callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-setcontenttypes","!doc":"Sets the content types to given contentTypes array"},setLaunchMode:{"!type":"fn(nodeId: number, launchMode: number, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-setlaunchmode","!doc":'Sets the launch mode of node with ID nodeId to "launchMode", node should be either a script or a stylesheet'},getLaunchMode:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-getlaunchmode","!doc":"Gets the launchMode of the node with ID nodeId, node should be either a script or a stylesheet"},stylesheet:{"!doc":"All functions related specifically to the stylesheet type","!url":"/html/crmAPIDocs.html#crm-stylesheet",setStylesheet:{"!type":"fn(nodeId: number, stylesheet: string, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-stylesheet-setstylesheet","!doc":'Sets the stylesheet of node with ID nodeId to value "stylesheet"'},getStylesheet:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-stylesheet-getstylesheet","!doc":"Gets the value of the stylesheet"}},link:{"!doc":"All functions related specifically to the link type","!url":"/html/crmAPIDocs.html#crm-link",getLinks:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-link-getlinks","!doc":"Gets the links of the node with ID nodeId"},setLinks:{"!type":"fn(nodeId: number, items: [?]|?, callback?: functon)","!url":"/html/crmAPIDocs.html#crm-link-setlinks","!doc":"Gets the links of the node with ID nodeId"},push:{"!type":"fn(nodeId: number, items: [?]|?, callback?: functon)","!url":"/html/crmAPIDocs.html#crm-link-push","!doc":"Pushes given items into the array of URLs of node with ID nodeId"},splice:{"!type":"fn(nodeId: number, start: nunber, amount: nunber, callback?: function)","!url":"/html/crmAPIDocs.html#crm-link-splice","!doc":'Splices the array of URLs of node with ID nodeId. Start at "start" and splices "amount" items (just like array.splice) and returns them as an array in the callback function'}},script:{"!doc":"All functions related specifically to the script type","!url":"/html/crmAPIDocs.html#crm-script",setScript:{"!type":"fn(nodeId: number, value: string, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-script-setscript","!doc":'Sets the script of node with ID nodeId to value "script"'},getScript:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-script-getscript","!doc":"Gets the value of the script"},setBackgroundScript:{"!type":"fn(nodeId: number, value: string, callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-script-setbackgroundscript","!doc":'Sets the backgroundScript of node with ID nodeId to value "script"'},getBackgroundScript:{"!type":"fn(nodeId: number, callback: function)","!url":"/html/crmAPIDocs.html#crm-script-getbackgroundscript","!doc":"Gets the value of the backgroundScript"},libraries:{"!doc":"All functions related specifically to the script's libraries","!url":"/html/crmAPIDocs.html#crm-script-libraries",push:{"!type":"fn(nodeId: number, libraries: [?]|?, callback?: function)","!url":"/html/crmAPIDocs.html#crm-script-libraries-push","!doc":"Pushes given libraries to the node with ID nodeId's libraries array, make sure to register them first or an error is thrown, only works on script nodes"},splice:{"!type":"fn(nodeId: number, start: nunber, amount: nunber, callback?: function)","!url":"/html/crmAPIDocs.html#crm-script-libraries-splice","!doc":'Splices the array of libraries of node with ID nodeId. Start at "start" and splices "amount" items (just like array.splice) and returns them as an array in the callback function, only works on script nodes'}},backgroundLibraries:{"!doc":"All functions related specifically to the background script's libraries","!url":"/html/crmAPIDocs.html#crm-script-backgroundlibraries",push:{"!type":"fn(nodeId: number, libraries: [?]|?, callback?: function)","!url":"/html/crmAPIDocs.html#crm-script-backgroundlibraries-push","!doc":"Pushes given libraries to the node with ID nodeId's libraries array, make sure to register them first or an error is thrown, only works on script nodes"},splice:{"!type":"fn(nodeId: number, start: nunber, amount: nunber, callback?: function)","!url":"/html/crmAPIDocs.html#crm-script-backgroundlibraries-splice","!doc":'Splices the array of libraries of node with ID nodeId. Start at "start" and splices "amount" items (just like array.splice) and returns them as an array in the callback function, only works on script nodes'}}},menu:{"!doc":"All functions related specifically to the menu type","!url":"/html/crmAPIDocs.html#crm-menu",getChildren:{"!type":"fn(nodeId: number, callback: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-menu-getchildren","!doc":"Gets the children of the node with ID nodeId, only works for menu type nodes"},setChildren:{"!type":"fn(nodeId: number, childrenIds: [number], callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-menu-setchildren","!doc":"Sets the children of node with ID nodeId to the nodes with IDs childrenIds, removes the to-be-child-node from the old location only works for menu type nodes"},push:{"!type":"fn(nodeId: number, childrenIds: [number], callback?: CrmCallback)","!url":"/html/crmAPIDocs.html#crm-menu-push","!doc":"Pushes the nodes with IDs childrenIds to the node with ID nodeId, only works for menu type nodes"},splice:{"!type":"fn(nodeId: number, start: number, amount: number, callback?: function)","!url":"/html/crmAPIDocs.html#crm-menu-splice","!doc":'Splices the children of the node with ID nodeId, starting at "start" and splicing "amount" items, the removed items will be put in the root of the tree instead, only works for menu type nodes'}}},libraries:{"!doc":"The libraries API used to register libraries","!url":"/html/crmAPIDocs.html#libraries",register:{"!type":"fn(name: string, options: ?, callback?: function)","!url":"/html/crmAPIDocs.html#libraries-register","!doc":'Registers a library with name "name"'}},chrome:{"!type":"fn(api: string) -> ?","!url":"/html/crmAPIDocs.html#chrome","!doc":"Calls the chrome API given in the \"API\" parameter. Due to some issues with the chrome message passing API it is not possible to pass messages and preserve scope. This could be fixed in other ways but unfortunately chrome.tabs.executeScript (what is used to execute scripts on the page) runs in a sandbox and does not allow you to access a lot. As a solution to this there are a few types of functions you can chain-call on the crmAPI.chrome(API) object: a or args or (): uses given arguments as arguments for the API in order specified. When passing a function, it will be converted to a placeholder function that will be called on return with the arguments chrome passed to it. This means the function is never executed on the background page and is always executed here to preserve scope. The arguments are however passed on as they should. You can call this function by calling .args or by just using the parentheses as below. Keep in mind that this function will not work after it has been called once, meaning that if your API calls callbacks multiple times (like chrome.tabs.onCreated) you should use persistent callbacks (see below). r or return: a function that is called with the value that the chrome API returned. This can be used for APIs that don't use callbacks and instead just return values such as chrome.runtime.getURL(). p or persistent: a function that is a persistent callback that will not be removed when called. This can be used on APIs like chrome.tabs.onCreated where multiple calls can occuring contrary to chrome.tabs.get where only one callback will occur. s or send: executes the request Examples: - For a function that uses a callback: crmAPI.chrome('alarms.get')('name', function(alarm) { //Do something with the result here }).send(); - - For a function that returns a value: crmAPI.chrome('runtime.getUrl')(path).return(function(result) { //Do something with the result }).send(); - - For a function that uses neither: crmAPI.chrome('alarms.create')('name', {}).send(); - - For a function that uses a persistent callback crmAPI.chrome('tabs.onCreated.addListener').persistent(function(tab) { //Do something with the tab }).send(); - - A compacter version: crmAPI.chrome('runtime.getUrl')(path).r(function(result) { //Do something with the result }).s(); - Requires permission \"chrome\" and the permission of the the API, so chrome.bookmarks requires permission \"bookmarks\", chrome.alarms requires \"alarms\""},GM:{"!doc":"The GM API that fills in any APIs that GreaseMonkey uses and points them to their CRM counterparts Documentation can be found here http://wiki.greasespot.net/Greasemonkey_Manual:API and here http://tampermonkey.net/documentation.php","!url":"/html/crmAPIDocs.html#gm",GM_info:{"!type":"fn() -> ?","!url":"/html/crmAPIDocs.html#gm-gm_info","!doc":"Returns any info about the script"},GM_getValue:{"!type":"fn(name: string, defaultValue?: any) -> any","!url":"/html/crmAPIDocs.html#gm-gm_getvalue","!doc":"This method retrieves a value that was set with GM_setValue. See GM_setValue for details on the storage of these values."},GM_setValue:{"!type":"fn(name: string, value: any)","!url":"/html/crmAPIDocs.html#gm-gm_setvalue","!doc":"This method allows user script authors to persist simple values across page-loads."},GM_deleteValue:{"!type":"fn(name: string)","!url":"/html/crmAPIDocs.html#gm-gm_deletevalue","!doc":"This method deletes an existing name / value pair from storage."},GM_listValues:{"!type":"fn() -> [string]","!url":"/html/crmAPIDocs.html#gm-gm_listvalues","!doc":"This method retrieves an array of storage keys that this script has stored."},GM_getResourceURL:{"!type":"fn(name: string) -> string","!url":"/html/crmAPIDocs.html#gm-gm_getresourceurl","!doc":"Gets the resource URL for given resource name"},GM_getResourceString:{"!type":"fn(name: string) -> string","!url":"/html/crmAPIDocs.html#gm-gm_getresourcestring","!doc":"Gets the resource string for given resource name"},GM_addStyle:{"!type":"fn(css: string)","!url":"/html/crmAPIDocs.html#gm-gm_addstyle","!doc":"This method adds a string of CSS to the document. It creates a new <style> element, adds the given CSS to it, and inserts it into the <head>."},GM_log:{"!type":"fn(any: any)","!url":"/html/crmAPIDocs.html#gm-gm_log","!doc":"Logs to the console"},GM_openInTab:{"!type":"fn(url: string)","!url":"/html/crmAPIDocs.html#gm-gm_openintab","!doc":"Open specified URL in a new tab, open_in_background is not available here since that not possible in chrome"},GM_registerMenuCommand:{"!type":"fn(ignoredArguments: any)","!url":"/html/crmAPIDocs.html#gm-gm_registermenucommand","!doc":"This is only here to prevent errors from occuring when calling any of these functions, this function does nothing"},GM_unregisterMenuCommand:{"!type":"fn(ignoredArguments: any)","!url":"/html/crmAPIDocs.html#gm-gm_unregistermenucommand","!doc":"This is only here to prevent errors from occuring when calling any of these functions, this function does nothing"},GM_setClipboard:{"!type":"fn(ignoredArguments: any)","!url":"/html/crmAPIDocs.html#gm-gm_setclipboard","!doc":"This is only here to prevent errors from occuring when calling any of these functions, this function does nothing"},GM_xmlhttpRequest:{"!type":"fn(options: ?) -> XMLHttpRequest","!url":"/html/crmAPIDocs.html#gm-gm_xmlhttprequest","!doc":"Sends an xmlhttpRequest with given parameters"},GM_addValueChangeListener:{"!type":"fn(name: string, callback: function) -> number","!url":"/html/crmAPIDocs.html#gm-gm_addvaluechangelistener","!doc":"Adds a change listener to the storage and returns the listener ID. 'name' is the name of the observed variable. The 'remote' argument of the callback function shows whether this value was modified from the instance of another tab (true) or within this script instance (false). Therefore this functionality can be used by scripts of different browser tabs to communicate with each other."},GM_removeValueChangeListener:{"!type":"fn(listenerId: number)","!url":"/html/crmAPIDocs.html#gm-gm_removevaluechangelistener","!doc":"Removes a change listener by its ID."},GM_download:{"!type":"fn(detailsOrUrl: string|?, name?: string)","!url":"/html/crmAPIDocs.html#gm-gm_download","!doc":"Downloads the file at given URL"},GM_getTab:{"!type":"fn(callback: function)","!url":"/html/crmAPIDocs.html#gm-gm_gettab","!doc":"Please use the comms API instead of this one"},GM_getTabs:{"!type":"fn(callback: function)","!url":"/html/crmAPIDocs.html#gm-gm_gettabs","!doc":"Please use the comms API instead of this one"},GM_saveTab:{"!type":"fn(ignoredArguments: any)","!url":"/html/crmAPIDocs.html#gm-gm_savetab","!doc":"Please use the comms API instead of this one, this one does nothing"},unsafeWindow:{"!type":"Window","!doc":"The unsafeWindow object provides full access to the pages javascript functions and variables.","!url":"/html/crmAPIDocs.html#gm-unsafewindow"},GM_notification:{"!type":"fn(textOrOptions: string|?, title?: string, image?: string, onclick?: function)","!url":"/html/crmAPIDocs.html#gm-gm_notification","!doc":"Shows a HTML5 Desktop notification and/or highlight the current tab."},GM_installScript:{"!type":"fn(ignoredArguments: any)","!url":"/html/crmAPIDocs.html#gm-gm_installscript","!doc":"THIS FUNCTION DOES NOT WORK AND IS DEPRECATED"}},log:{"!type":"fn(argument: any)","!url":"/html/crmAPIDocs.html#log","!doc":"Logs given arguments to the background page and logger page"}},"!define":{CrmNode:{id:"number",index:"number",name:"string",type:"string",children:"[CrmNode]",nodeInfo:"?","nodeInfo.installDate":"string","nodeInfo.isRoot":"bool","nodeInfo.permissions":"[string]","nodeInfo.source":"string|?","nodeInfo.source.url":"string","nodeInfo.source.author":"string",path:"[number]",onContentTypes:"[bool]",permissions:"[string]",triggers:"[?]","triggers.url":"string","triggers.not":"bool",linkVal:"LinkVal",scriptVal:"ScriptVal",stylesheetVal:"StylesheetVal",menuVal:"[?]","!url":"/html/crmAPIDocs.html#crmnode"},LinkVal:{value:"[?]","value.url":"string","value.newTab":"bool",showOnSpecified:"bool","!proto":"CrmNode","!url":"/html/crmAPIDocs.html#linkval"},ScriptVal:{value:"?","value.launchMode":"number","value.script":"string","value.backgroundScript":"string","value.metaTags":"?","value.libraries":"[?]","value.libraries.name":"script","value.backgroundLibraries":"[?]","value.backgroundLibraries.name":"script","!proto":"CrmNode","!url":"/html/crmAPIDocs.html#scriptval"},StylesheetVal:{value:"?","value.launchMode":"number","value.stylesheet":"string","value.toggle":"bool","value.defaultOn":"bool","!proto":"CrmNode","!url":"/html/crmAPIDocs.html#stylesheetval"},MenuVal:{showOnSpecified:"bool","!proto":"CrmNode","!url":"/html/crmAPIDocs.html#menuval"},DividerVal:{showOnSpecified:"bool","!proto":"CrmNode","!url":"/html/crmAPIDocs.html#dividerval"},CrmCallback:{node:"CrmNode","!url":"/html/crmAPIDocs.html#crmcallback"}}};