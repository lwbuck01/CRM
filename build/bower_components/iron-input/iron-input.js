Polymer({is:"iron-input",extends:"input",behaviors:[Polymer.IronValidatableBehavior],properties:{bindValue:{observer:"_bindValueChanged",type:String},preventInvalidInput:{type:Boolean},allowedPattern:{type:String},_previousValidInput:{type:String,value:""}},listeners:{input:"_onInput",keydown:"_onKeydown"},get _patternRegExp(){var a;if(this.allowedPattern)a=new RegExp(this.allowedPattern);else if(this.pattern)a=new RegExp(this.pattern);else switch(this.type){case"number":a=/[0-9.,e-]/}return a},ready:function(){this.bindValue=this.value},_bindValueChanged:function(){this.value!==this.bindValue&&(this.value=this.bindValue),this.fire("bind-value-changed",{value:this.bindValue})},_onInput:function(){this.bindValue=this.value},_isPrintable:function(a){var b=a>47&&a<58||32==a||13==a||a>64&&a<91||a>95&&a<112||a>185&&a<193||a>218&&a<223;return b},_correctNumpadKeys:function(a){return a>95&&a<112?a-48:a},_onKeydown:function(a){if(this.preventInvalidInput||"number"===this.type){var b=this._patternRegExp;if(b){var c=String.fromCharCode(this._correctNumpadKeys(a.keyCode));this._isPrintable(a.keyCode)&&!b.test(c)&&a.preventDefault()}}},validate:function(){if(!this.required&&""==this.value)return!0;var a;return this.hasValidator()?a=Polymer.IronValidatableBehavior.validate.call(this,this.value):(this.invalid=!this.validity.valid,a=this.validity.valid),this.fire("iron-input-validate"),a}});