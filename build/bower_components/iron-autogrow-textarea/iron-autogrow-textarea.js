Polymer({is:"iron-autogrow-textarea",behaviors:[Polymer.IronValidatableBehavior],properties:{bindValue:{observer:"_bindValueChanged",type:String},rows:{type:Number,value:1,observer:"_updateCached"},maxRows:{type:Number,value:0,observer:"_updateCached"},required:{type:Boolean},maxlength:{type:Number}},listeners:{input:"_onInput"},get textarea(){return this.$.textarea},_update:function(){this.$.mirror.innerHTML=this._valueForMirror();var a=this.textarea;a&&this.bindValue!=a.value&&(this.bindValue=a.value)},_bindValueChanged:function(){var a=this.textarea;a&&(a.value=this.bindValue,this._update(),this.fire("bind-value-changed",{value:this.bindValue}))},_onInput:function(a){this.bindValue=a.path?a.path[0].value:a.target.value,this._update()},_constrain:function(a){var b;for(a=a||[""],b=this.maxRows>0&&a.length>this.maxRows?a.slice(0,this.maxRows):a.slice(0);this.rows>0&&b.length<this.rows;)b.push("");return b.join("<br>")+"&nbsp;"},_valueForMirror:function(){var a=this.textarea;if(a)return this.tokens=a&&a.value?a.value.replace(/&/gm,"&amp;").replace(/"/gm,"&quot;").replace(/'/gm,"&#39;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").split("\n"):[""],this._constrain(this.tokens)},_updateCached:function(){this.$.mirror.innerHTML=this._constrain(this.tokens)}});