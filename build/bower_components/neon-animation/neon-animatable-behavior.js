Polymer.NeonAnimatableBehavior={properties:{animationConfig:{type:Object},entryAnimation:{observer:"_entryAnimationChanged",type:String},exitAnimation:{observer:"_exitAnimationChanged",type:String}},_entryAnimationChanged:function(){this.animationConfig=this.animationConfig||{},"fade-in-animation"!==this.entryAnimation?this.animationConfig.entry=[{name:"opaque-animation",node:this},{name:this.entryAnimation,node:this}]:this.animationConfig.entry=[{name:this.entryAnimation,node:this}]},_exitAnimationChanged:function(){this.animationConfig=this.animationConfig||{},this.animationConfig.exit=[{name:this.exitAnimation,node:this}]},_copyProperties:function(a,b){for(var c in b)a[c]=b[c]},_cloneConfig:function(a){var b={isClone:!0};return this._copyProperties(b,a),b},_getAnimationConfigRecursive:function(a,b,c){if(this.animationConfig){var d;if(d=a?this.animationConfig[a]:this.animationConfig,Array.isArray(d)||(d=[d]),d)for(var e,f=0;e=d[f];f++)if(e.animatable)e.animatable._getAnimationConfigRecursive(e.type||a,b,c);else if(e.id){var g=b[e.id];g?(g.isClone||(b[e.id]=this._cloneConfig(g),g=b[e.id]),this._copyProperties(g,e)):b[e.id]=e}else c.push(e)}},getAnimationConfig:function(a){var b=[],c=[];this._getAnimationConfigRecursive(a,b,c);for(var d in b)c.push(b[d]);return c}};